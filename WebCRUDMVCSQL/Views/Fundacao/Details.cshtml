@model ObraFacilApp.Models.FundacaoModel

@{
    ViewData["Title"] = "Details";

}

<style>
    .green {
        color: green
    }

    .red {
        color: red
    }

    .progress-bar {
        width: 100%;
        height: 20px;
        background-color: #f0f0f0;
        border-radius: 10px;
        overflow: hidden;
    }

    .progress {
        height: 100%;
        background-color: #4caf50;
        width: 0;
        transition: width 0.3s ease-in-out;
    }
</style>


<div>
    <h4>Fundação</h4>
    <hr />
    <div class="row">
        <table class="table">
            <tbody>
                
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoAlicerce)</th>
                    <td>@Model.ComprimentoAlicerce</td>
                    <td>@(Model.ComprimentoAlicerceOK ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>
                
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaAlicerce)</th>
                    <td>@Model.AlturaAlicerce</td>
                    <td>@(Model.AlturaAlicerceOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdBlocosAlicerce)</th>
                    <td>@Model.QtdBlocosAlicerce</td>
                    <td>@(Model.QtdBlocosAlicerceOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaPedra)</th>
                    <td>@Model.AlturaPedra</td>
                    <td>@(Model.AlturaPedraOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoPedra)</th>
                    <td>@Model.ComprimentoPedra</td>
                    <td>@(Model.ComprimentoPedraOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaVigaBaldrame)</th>
                    <td>@Model.AlturaVigaBaldrame</td>
                    <td>@(Model.AlturaVigaBaldrameOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoVigaBaldrame)</th>
                    <td>@Model.ComprimentoVigaBaldrame</td>
                    <td>@(Model.ComprimentoVigaBaldrameOK ? Html.Raw("<i class='fas fa-check green' style= 'color:#1f5129;' ></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                
                <tr>
                    <th>@Html.DisplayNameFor(model => model.LarguraVigaBaldrame)</th>
                    <td>@Model.LarguraVigaBaldrame</td>
                    <td>@(Model.LarguraVigaBaldrameOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.MetragemCubicaCimentoVigaBaldrama)</th>
                    <td>@Model.MetragemCubicaCimentoVigaBaldrama</td>
                    <td>@(Model.MetragemCubicaCimentoVigaBaldramaOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdMicro)</th>
                    <td>@Model.QtdMicro</td>
                    <td>@(Model.QtdMicroOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataInicioFundacao)</th>
                    <td>@Model.DataInicioFundacao.ToString("dd/MM/yyyy")</td>
                    <td>@(Model.DataInicioFundacaoOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataConclusaoFundacao)</th>
                    <td>@Model.DataConclusaoFundacao.ToString("dd/MM/yyyy")</td>
                    <td>@(Model.DataConclusaoFundacaoOK ? Html.Raw("<i class='fas fa-check green'></i>") : Html.Raw("<i class='fas fa-times red'></i>"))</td>
                </tr>


            </tbody>
        </table>
        <div class="progress-bar">
            <div class="progress text-center" style="text-align:center" >
                <span class="progress-percentage w-100">0%</span>
            </div>
        </div>

    </div>

</div>
    <div>
    <a asp-controller="Etapas" asp-action="Index" asp-route-id="@Model.ProjetoId">Voltar</a>
    </div>

@section Scripts
    {
    <script>
        const booleanArray = [@(Model.ComprimentoAlicerceOK.ToString().ToLower()), @(Model.AlturaAlicerceOK.ToString().ToLower()), @(Model.QtdBlocosAlicerceOK.ToString().ToLower()), @(Model.ComprimentoPedraOK.ToString().ToLower()), @(Model.AlturaPedraOK.ToString().ToLower()), @(Model.ComprimentoPedraOK.ToString().ToLower()), @(Model.DataConclusaoFundacaoOK.ToString().ToLower()), @(Model.DataInicioFundacaoOK.ToString().ToLower()), @(Model.QtdMicroOK.ToString().ToLower())];

        function updateProgressBar() {
            const progressBar = document.querySelector('.progress');
            const progressPercentage = (booleanArray.filter(Boolean).length / booleanArray.length) * 100;
            progressBar.style.width = progressPercentage + '%';

            const progressPercentageElement = document.querySelector('.progress-percentage');
            progressPercentageElement.textContent = Math.round(progressPercentage) + '%';
        }

        updateProgressBar(); // Update the progress bar initially
    </script>
    }