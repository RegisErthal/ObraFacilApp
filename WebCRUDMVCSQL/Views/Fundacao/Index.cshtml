@model ObraFacilApp.Models.FundacaoModel

@{
    ViewData["Title"] = "Index";
    
}

<h1>Fundação</h1>

<div>
    <h4>Fundação</h4>
    <hr />
    <div class="row">
        <table class="table">
            <tbody>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoAlicerce)</th>
                    <td>@Model.ComprimentoAlicerce</td>
                    <td>@(Model.ComprimentoAlicerceOK ? "Concluído" : "Não concluído")</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaAlicerce)</th>
                    <td>@Model.AlturaAlicerce</td>
                    <td>@(Model.AlturaAlicerceOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdBlocosAlicerce)</th>
                    <td>@Model.QtdBlocosAlicerce</td>
                    <td>@(Model.QtdBlocosAlicerceOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaPedra)</th>
                    <td>@Model.AlturaPedra</td>
                    <td>@(Model.AlturaPedraOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoPedra)</th>
                    <td>@Model.ComprimentoPedra</td>
                    <td>@(Model.ComprimentoPedraOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.AlturaVigaBaldrame)</th>
                    <td>@Model.AlturaVigaBaldrame</td>
                    <td>@(Model.AlturaVigaBaldrameOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.ComprimentoVigaBaldrame)</th>
                    <td>@Model.ComprimentoVigaBaldrame</td>
                    <td>@(Model.ComprimentoVigaBaldrameOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.LarguraVigaBaldrame)</th>
                    <td>@Model.LarguraVigaBaldrame</td>
                    <td>@(Model.LarguraVigaBaldrameOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.MetragemCubicaCimentoVigaBaldrama)</th>
                    <td>@Model.MetragemCubicaCimentoVigaBaldrama</td>
                    <td>@(Model.MetragemCubicaCimentoVigaBaldramaOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdMicro)</th>
                    <td>@Model.QtdMicro</td>
                    <td>@(Model.QtdMicroOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataInicioFundacao)</th>
                    <td>@Model.DataInicioFundacao</td>
                    <td>@(Model.DataInicioFundacaoOK ? "Concluído" : "Não concluído")</td>
                </tr>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataConclusaoFundacao)</th>
                    <td>@Model.DataConclusaoFundacao</td>
                    <td>@(Model.DataConclusaoFundacaoOK ? "Concluído" : "Não concluído")</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

            <td>
                <a asp-action="Edit">Editar</a> |
                <a asp-action="Details">Detalhes</a> |
                <a asp-action="Delete">Excluir</a>
            </td>
        </tr>

    

