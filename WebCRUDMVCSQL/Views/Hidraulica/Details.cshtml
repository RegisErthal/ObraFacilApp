@model ObraFacilApp.Models.HidraulicaModel

@{
    ViewData["Title"] = "Details";
}

<style>
    .green {
        color: green
    }

    .red {
        color: red
    }

    .progress-bar {
        width: 100%;
        height: 20px;
        background-color: #f0f0f0;
        border-radius: 10px;
        overflow: hidden;
    }

    .progress {
        height: 100%;
        background-color: #4caf50;
        width: 0;
        transition: width 0.3s ease-in-out;
    }
</style>

<div>
    <h4>Hidraulica</h4>

    <hr />
    <div class="row">
        <div style="margin-top: 20px; margin-bottom: 10px">
            @foreach (var item in Model.Imagens)
            {
                <div style="float:left; margin: 2px;">
                    <img src="../../imagens/UploadHidraulica/@(item.FileName)" class="card-img-top" style="width: 300px" alt="...">
                </div>
            }
        </div>
        <table class="table">
            <tbody>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdTorneiras)</th>
                    <td>@Model.QtdTorneiras</td>
                    <td>@(Model.QtdTorneirasOK ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdRegistros)</th>
                    <td>@Model.QtdRegistros</td>
                    <td>@(Model.QtdRegistrosOk ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdCaixaGordura)</th>
                    <td>@Model.QtdCaixaGordura</td>
                    <td>@(Model.QtdCaixaGorduraOk ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.QtdRalos)</th>
                    <td>@Model.QtdRalos</td>
                    <td>@(Model.QtdRalosOK ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.PrevisaoCusto)</th>
                    <td>@Model.PrevisaoCusto</td>
                    <td>-</td>
                    
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataInicioHidraulica)</th>
                    <td>@Model.DataInicioHidraulica.ToString("dd/MM/yyyy")</td>
                    <td>@(Model.DataInicioHidraulicaOK ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>

                <tr>
                    <th>@Html.DisplayNameFor(model => model.DataConclusaoHidraulica)</th>
                    <td>@Model.DataConclusaoHidraulica.ToString("dd/MM/yyyy")</td>
                    <td>@(Model.DataConclusaoHidraulicaOK ? Html.Raw("<i class='fas fa-check green '></i>") : Html.Raw("<i class='fas fa-times red '></i>"))</td>
                </tr>
            </tbody>
        </table>



        <div class="progress-bar">
            <div class="progress" style="text-align:center">
                <span class="progress-percentage w-100">0%</span>
            </div>
        </div>
    </div>
</div>
<div>
    <a asp-controller="Etapas" asp-action="Index" asp-route-id="@Model.ProjetoId">Voltar</a>
</div>
 
@section Scripts
    {
    <script>
        const booleanArray = [@(Model.QtdTorneirasOK.ToString().ToLower()), @(Model.QtdRegistrosOk.ToString().ToLower()), @(Model.QtdRalosOK.ToString().ToLower()), @(Model.DataInicioHidraulicaOK.ToString().ToLower()), @(Model.DataConclusaoHidraulicaOK.ToString().ToLower()), @(Model.QtdCaixaGorduraOk.ToString().ToLower())];

        function updateProgressBar() {
            const progressBar = document.querySelector('.progress');
            const progressPercentage = (booleanArray.filter(Boolean).length / booleanArray.length) * 100;
            progressBar.style.width = progressPercentage + '%';

            const progressPercentageElement = document.querySelector('.progress-percentage');
            progressPercentageElement.textContent = Math.round(progressPercentage) + '%';
        }

        updateProgressBar(); // Update the progress bar initially
    </script>
    }